:root {
  --clr-dark: #0f172a;
  --clr-light: #f1f5f9;
  --clr-accent: #e11d48;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

.timebutton {
    width: 5vw;
    height: 5vw;
    cursor: pointer;
    color: red;
}

.linkedin {
  align-self: center;
  justify-self: center;
  background-image: url( "img/linkedin.jpg" );
  cursor: pointer;
  width: 5vw;
  height: 5vw;
  background-size: cover;
}

.github {
  align-self: center;
  justify-self: center;
  background-size: cover;
  background-image: url( "img/hub.jpg" );
  cursor: pointer;
  width: 5vw;
  height: 5vw;
  background-size: cover;
}

.title {
  font-family: "League Spartan", sans-serif;
  font-optical-sizing: auto;
  font-weight: 690;
  font-style: normal;
  font-size: 5.5vw;
  color: white;
  align-self: center;
  justify-self: center;
}

.heading {
  font-family: "Roboto", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  font-size: 1.4vw;
  font-variation-settings:
    "wdth" 100;
  color: white;
  align-self: center;
  justify-self: center;
}


.item {
  padding: 0.5em;
  background-color: #fb7185;
  font-weight: 700;
  color: var(--clr-light);
  border: 10px solid var(--clr-accent);
}

.pic{
  object-position: start;
  max-width: 1%;
  height: 1%;
}


.container{
    width: 99vw;
    height: 99vh;
    margin: 0 auto;
    border: 1vw;
    display: grid;
    grid-template-columns: repeat(10, 9vw); /*fr= fill remainng space. col 4 can be is 100px (during resize)*/
    /*grid-auto-flow: column; /*items in ig are now added to a new column*
    grid-auto-columns: 100px; /*when you add an item and grid is full it goes outside to implicit grid- now all rows in ig are 100px*/
    grid-template-rows: repeat(auto-fill, minmax(10vh, 1fr)); /*rows will automatically dissapear if screen is too small, 7 rows of 100px*/
    /*grid-gap: rowem, colem; creates gaps btwn grids*/
}

.item-0 {
    grid-area: 1 / 1 / 2 / 12;
}

.item-1 {
    grid-row: 1 / 10; /*starts from default start and goes two rows*/
    grid-column: 1 / 2; /*start / end */
}
.item-2 {
    grid-row: 1 / 10; 
    grid-column: 11 / 12; /*start / end */
    /*z-index: 1; /item 2 is ontop of anything*/
}
.item-3 {
    grid-area: 2 / 2 /9 / 5; /*row stat, col start, row end, col end*/
    background-image: url( "img/onmountain.jpg" );
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.item-4{
    grid-area: 3 / 6 / 3 / 10;
}
.item-5{
    grid-area: 4 / 6 / 4 / 10;
}
.item-6{
    grid-area: 6 / 7 / 6 / 8;
   
}
.item-7{
    grid-area: 6 / 8 / 6 / 9;
}